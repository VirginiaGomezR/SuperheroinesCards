{"version":3,"sources":["components/Card.js","services/Data.js","components/App.js","index.js"],"names":["Card","i","x","y","rot","scale","trans","bind","data","bio","name","age","pic","div","key","style","transform","interpolate","className","src","alt","to","Math","random","delay","r","s","App","useState","Set","gone","useSprings","length","from","props","set","useDrag","index","args","down","mx","movement","xDir","distance","direction","velocity","dir","add","isGone","has","window","innerWidth","undefined","config","friction","tension","size","setTimeout","clear","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0f30373.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { animated, interpolate } from \"react-spring\";\r\nimport '../styles/Card.css'\r\n\r\nconst Card = ({ i, x, y, rot, scale, trans, bind, data }) => {\r\n  const { bio, name, age, pic} = data[i];\r\n\r\n  return (\r\n    <animated.div\r\n      key={i}\r\n      style={{\r\n        transform: interpolate([x, y], (x, y) => `translate3d(${x}px,${y}px,0)`)\r\n      }}\r\n    >\r\n      <animated.div\r\n        {...bind(i)}\r\n        style={{\r\n          transform: interpolate([rot, scale], trans)\r\n        }}\r\n      >\r\n        <div className=\"card\">\r\n          <img className=\"card_picture\" src={pic} alt={name}></img>\r\n          <h4 className=\"card_age\">{age}</h4>\r\n          <p className=\"card_bio\">{bio}</p>\r\n        </div>\r\n      </animated.div>\r\n    </animated.div>\r\n  );\r\n};\r\n\r\nexport default Card;","export default [\r\n  \r\n    {\r\n      pic: \"https://girltalkhq.com/wp-content/uploads/2018/10/image3-e1539800550756.png\",\r\n      name: \"Ada Lovelace\",\r\n      age: \"(1815-1852)\",\r\n      bio:\r\n        \"Reconocida como la primera programadora de computadoras del mundo. Mejoró la computadora análitica de Charles Babbage para crear música y gráficos.\"\r\n    },\r\n    {\r\n      pic: \"https://girltalkhq.com/wp-content/uploads/2018/10/image4-e1539800539916.png\",\r\n      name: \"Hedy Lamarr\",\r\n      age: \"(1914-2000)\",\r\n      bio: \"Junto al compositor George Antheil, inventó una primera versión del espectro ensanchado –técnica de modulación empleada en telecomunicaciones–. En la actualidad, principios de la tecnología WiFi y Bluetooth.\"\r\n    },\r\n    {\r\n      pic: \"https://girltalkhq.com/wp-content/uploads/2018/10/image5-e1539800527319.png\",\r\n      name: \"Rosalind Franklin\",\r\n      age: \"(1920-1958)\",\r\n      bio: \"Franklin, junto con su alumno Ray Gosling, capturó una imagen de rayos X del ADN apodada Fotografía 51. La toma demostró que el ácido desoxirribonucleico se compone de dos cadenas opuestas.\"\r\n    },\r\n    {\r\n      pic: \"https://girltalkhq.com/wp-content/uploads/2018/10/image6-e1539800515788.png\",\r\n      name: \"Virginia Apgar\",\r\n      age: \"(1909-1974)\",\r\n      bio: \"Líder en el campo de la anestesiología y la teratología. Fundó el campo de la neonatología. Creó el test Apgar, utilizado para evaluar la salud de los recién nacidos, que ha conseguido reducir la mortalidad infantil en todo el mundo.\"\r\n    },\r\n    {\r\n      pic: \"https://girltalkhq.com/wp-content/uploads/2018/10/image7-e1539800503782.png\",\r\n      name: \"Katsuko Saruhashi \", \r\n      age: \"(1920-2007)\",\r\n      bio: \"Concluyó que el CO2 mataba la vida marina. La Tabla Saruhashi todavía se usa hoy para medirlo. En la década de 1960, centró su atención en los desechos nucleares. Ayudó a endurecer las leyes oceánicas que rigen la experimentación nuclear.\"\r\n    },\r\n    {\r\n      pic: \"https://girltalkhq.com/wp-content/uploads/2018/10/image8-e1539800491454.png\",\r\n      name: \"Marie Van Brittan Brown\",\r\n      age: \"(1922-1999)\",\r\n      bio: \"Junto a su esposo, Marie ideó un sistema de vigilancia doméstico. Presentaron una patente en 1966. Su hija Norma Brown patentó un dispositivo contra la violación en 1998.\"\r\n    },\r\n    {\r\n      pic: \"https://girltalkhq.com/wp-content/uploads/2018/10/image9-e1539800477577.png\",\r\n      name: \"Stephanie Kwolek\",\r\n      age: \"(1923-2014)\",\r\n      bio: \"Descubrió el Kevlar en 1965. El Kevlar es cinco veces más resistente que el acero, la policía de todo el mundo lo ha usado desde que entró en producción en masa en 1971.\"\r\n    },\r\n    {\r\n      pic: \"https://girltalkhq.com/wp-content/uploads/2018/10/image10-e1539800466716.png\",\r\n      name: \"Emilie Du Chatelet\",\r\n      age: \"(1706-1749)\",\r\n      bio: \"Famosa por traducir y corregir las obras de Newton. Hoy la traducción de Emilie sigue siendo la versión definitiva en francés.\"\r\n    }\r\n  ]","import React, { useState } from 'react'\nimport { useSprings } from 'react-spring'\nimport { useDrag } from 'react-use-gesture'\nimport '../styles/App.css'\nimport Card from \"./Card\";\nimport data from \"../services/Data\";\n\n\n// These two are just helpers, they curate spring data, values that are later being interpolated into css\nconst to = i => ({ x: 0, y: i * -4, scale: 1, rot: -10 + Math.random() * 20, delay: i * 100 })\nconst from = i => ({ x: 0, rot: 0, scale: 1.5, y: -1000 })\n// This is being used down there in the view, it interpolates rotation and scale into a css transform\nconst trans = (r, s) => `perspective(1500px) rotateX(30deg) rotateY(${r / 10}deg) rotateZ(${r}deg) scale(${s})`\n\n\nfunction App() {\n  const [gone] = useState(() => new Set()) // The set flags all the cards that are flicked out\n  const [props, set] = useSprings(data.length, i => ({ ...to(i), from: from(i) })) // Create a bunch of springs using the helpers above\n  // Create a gesture, we're interested in down-state, delta (current-pos - click-pos), direction and velocity\n  const bind = useDrag(({ args: [index], down, movement: [mx], distance, direction: [xDir], velocity }) => {\n    const trigger = velocity > 0.2 // If you flick hard enough it should trigger the card to fly out\n    const dir = xDir < 0 ? -1 : 1 // Direction should either point left or right\n    if (!down && trigger) gone.add(index) // If button/finger's up and trigger velocity is reached, we flag the card ready to fly out\n    set(i => {\n      if (index !== i) return // We're only interested in changing spring-data for the current spring\n      const isGone = gone.has(index)\n      const x = isGone ? (200 + window.innerWidth) * dir : down ? mx : 0 // When a card is gone it flys out left or right, otherwise goes back to zero\n      const rot = mx / 100 + (isGone ? dir * 10 * velocity : 0) // How much the card tilts, flicking it harder makes it rotate faster\n      const scale = down ? 1.1 : 1 // Active cards lift up a bit\n      return { x, rot, scale, delay: undefined, config: { friction: 50, tension: down ? 800 : isGone ? 200 : 500 } }\n    })\n    if (!down && gone.size === data.length) setTimeout(() => gone.clear() || set(i => to(i)), 600)\n  })\n  // Now we're just mapping the animated values to our view, that's it. Btw, this component only renders once\n  return props.map(({ x, y, rot, scale }, i) => (\n    <Card\n    i={i}\n    x={x}\n    y={y}\n    rot={rot}\n    scale={scale}\n    trans={trans}\n    data={data}\n    bind={bind}\n  />\n  ))\n}\n\nexport default App;\n\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}